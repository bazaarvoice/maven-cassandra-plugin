A module for outputting JMX data in Json format over HTTP.
There are two methods available to do so, represented by two different classes.

1. com.bazaarvoice.commons.monitoring.ApplicationMonitor - starts a standalon HTTP server on a single port.
2. com.bazaarvoice.commons.monitoring.ApplicationMonitorServlet - provides a servlet to be used in an existing servlet container.

The former can be started via Spring or through code. Its default is to listen on port 9999, but can be passed a different one in its constructor.
The server can then be started with its startMonitor() method and stopped with stopMonitor(). It can be instatiated via Spring like so:

    <bean class="com.bazaarvoice.commons.monitoring.ApplicationMonitor" init-method="startMonitor" destroy-method="stopMonitor"/>

The servlet can be started by adding something like the following to your web.xml:

    <servlet>
        <servlet-name>Monitoring</servlet-name>
        <servlet-class>com.bazaarvoice.commons.monitoring.ApplicationMonitorServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>Monitoring</servlet-name>
        <url-pattern>/Monitoring/*</url-pattern>
    </servlet-mapping>


Whether on its own port or in a servlet, there are two base URIs provided:

1. objects/ - a dump of all monitored data.
2. info/ - a list of names of monitored objects.

Both can have the name of an object appended to the URI to narrow the output down to the specified object. So if there is an object named jvm.Runtime,
you can hit the following URLs:

1. objects/jvm.Runtime - just the data for the jvm.Runtime object.
2. info/jvm.Runtime - a list of attribute names for the jvm.Runtime object.
